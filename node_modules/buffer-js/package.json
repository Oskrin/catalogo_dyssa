{
  "_args": [
    [
      {
        "raw": "buffer-js",
        "scope": null,
        "escapedName": "buffer-js",
        "name": "buffer-js",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\xampp\\htdocs\\minimarket"
    ]
  ],
  "_from": "buffer-js@latest",
  "_id": "buffer-js@0.0.3",
  "_inCache": true,
  "_location": "/buffer-js",
  "_nodeVersion": "0.12.4",
  "_npmUser": {
    "name": "eahefnawy",
    "email": "eahefnawy@gmail.com"
  },
  "_npmVersion": "2.10.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "buffer-js",
    "scope": null,
    "escapedName": "buffer-js",
    "name": "buffer-js",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/buffer-js/-/buffer-js-0.0.3.tgz",
  "_shasum": "59b61cd0b42aedf37d37d04b2500aba220fe2a17",
  "_shrinkwrap": null,
  "_spec": "buffer-js",
  "_where": "C:\\xampp\\htdocs\\minimarket",
  "author": {
    "name": "Eslam A. Hefnawy"
  },
  "bugs": {
    "url": "https://github.com/eahefnawy/buffer-node/issues"
  },
  "contributors": [
    {
      "name": "Eslam A. Hefnawy",
      "email": "eahefnawy@gmail.com",
      "url": "http://eahefnawy.com"
    }
  ],
  "dependencies": {
    "request": "2.53.0"
  },
  "description": "Node.js Wrapper for the Buffer API",
  "devDependencies": {},
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "59b61cd0b42aedf37d37d04b2500aba220fe2a17",
    "tarball": "https://registry.npmjs.org/buffer-js/-/buffer-js-0.0.3.tgz"
  },
  "gitHead": "7f79d97a311a1a0057fd9705c1033342b77e8235",
  "homepage": "https://github.com/eahefnawy/buffer-node",
  "keywords": [
    "API",
    "wrapper",
    "buffer",
    "real-time",
    "social"
  ],
  "license": "MIT",
  "main": "buffer.js",
  "maintainers": [
    {
      "name": "eahefnawy",
      "email": "eahefnawy@gmail.com"
    }
  ],
  "name": "buffer-js",
  "optionalDependencies": {},
  "readme": "Node.js Wrapper for the Buffer API\n==================================\nThis Node package makes working with the Buffer API a breeze!\nA little present for the awesome Buffer team & the happy community :)\n\nThe package was design with simplicity and extendability in mind. In other words, it's object oriented! It's so simple that I thought writing test code would be an overkill!\n\n## Installation\nTo get started, just...\n```\nnpm install buffer-js\n```\n\n## Usage\nYou'll need an access token to start using the Buffer API, you can either use the single-time access token provided by Buffer when you [created the application](https://buffer.com/developers/apps/create) for your own usage only, or you can request access tokens using OAUTH 2.0, which is beyond the scope of this package. \n\nNOTE: the params object literal that you may need to pass varries by method. Check the [Buffer API docs](https://buffer.com/developers/api) for more info.\n\n```\nvar Buffer = require('buffer-js');\n\nvar callback = function(body) {\n  console.log(body);\n};\n\n// Check the Buffer API docs to pass the right parameters\n// based on the method you're calling\nvar params = {\n  ...\n  ...\n}\n\n\n\nvar opts = {\n  access_token: 'ACCESS_TOKEN'\n};\nvar User = new Buffer.User(opts);\nUser.get(callback);\nvar Links = new Buffer.Links(opts);\nLinks.get(params, callback);\nvar Info = new Buffer.Info(opts);\nInfo.get(callback);\n\n\n\nvar opts = {\n  access_token: 'ACCESS_TOKEN',\n  profile_id: 'PROFILE_ID'\n};\nProfiles = new Buffer.Profiles(opts);\nProfiles.all(callback); // doesn't need profile_id\nProfiles.get(callback);\nProfiles.schedules(callback);\nProfiles.updateSchedules(params, callback);\nProfiles.pendingUpdates(params, callback);\nProfiles.sentUpdates(params, callback);\nProfiles.reorderUpdates(params, callback);\nProfiles.shuffleUpdates(params, callback);\n\n\n\nvar opts = {\n  access_token: 'ACCESS_TOKEN',\n  update_id: 'UPDATE_ID'\n};\nUpdates = new Buffer.Updates(opts);\nUpdates.create(params, callback); // doesn't need update_id\nUpdates.get(callback);\nUpdates.interactions(params, callback); \nUpdates.update(params, callback); \nUpdates.share(callback);\nUpdates.destroy(callback);\nUpdates.moveTop(callback);\n```\n  \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/eahefnawy/buffer-node.git"
  },
  "scripts": {},
  "version": "0.0.3"
}
